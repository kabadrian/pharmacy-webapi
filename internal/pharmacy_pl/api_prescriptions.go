/*
 * Pharmacy Prescription API
 *
 * Pharmacy Prescription management system
 *
 * API version: 1.0.0
 * Contact: xkabac@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package pharmacy_pl

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type PrescriptionsAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreatePrescription - Creates a new prescription
   CreatePrescription(ctx *gin.Context)

    // DeletePrescription - Deletes a specific prescription
   DeletePrescription(ctx *gin.Context)

    // GetAmbulancePrescriptions - Provides the list of prescriptions for an ambulance
   GetAmbulancePrescriptions(ctx *gin.Context)

    // GetPrescriptionById - Retrieves a specific prescription by ID
   GetPrescriptionById(ctx *gin.Context)

    // UpdatePrescription - Updates a specific prescription
   UpdatePrescription(ctx *gin.Context)

 }

 // partial implementation of PrescriptionsAPI - all functions must be implemented in add on files
type implPrescriptionsAPI struct {

}

func newPrescriptionsAPI() PrescriptionsAPI {
  return &implPrescriptionsAPI{}
}

func (this *implPrescriptionsAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/ambulances/:ambulanceId/prescriptions", this.CreatePrescription)
  routerGroup.Handle( http.MethodDelete, "/ambulances/:ambulanceId/prescriptions/:prescriptionId", this.DeletePrescription)
  routerGroup.Handle( http.MethodGet, "/ambulances/:ambulanceId/prescriptions", this.GetAmbulancePrescriptions)
  routerGroup.Handle( http.MethodGet, "/ambulances/:ambulanceId/prescriptions/:prescriptionId", this.GetPrescriptionById)
  routerGroup.Handle( http.MethodPut, "/ambulances/:ambulanceId/prescriptions/:prescriptionId", this.UpdatePrescription)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreatePrescription - Creates a new prescription
// func (this *implPrescriptionsAPI) CreatePrescription(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeletePrescription - Deletes a specific prescription
// func (this *implPrescriptionsAPI) DeletePrescription(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetAmbulancePrescriptions - Provides the list of prescriptions for an ambulance
// func (this *implPrescriptionsAPI) GetAmbulancePrescriptions(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetPrescriptionById - Retrieves a specific prescription by ID
// func (this *implPrescriptionsAPI) GetPrescriptionById(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdatePrescription - Updates a specific prescription
// func (this *implPrescriptionsAPI) UpdatePrescription(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

