/*
 * Pharmacy Prescription API
 *
 * Pharmacy Prescription management system
 *
 * API version: 1.0.0
 * Contact: xkabac@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package pharmacy_pl

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type AmbulancesAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreateAmbulance - Creates a new ambulance
   CreateAmbulance(ctx *gin.Context)

    // DeleteAmbulance - Deletes a specific ambulance
   DeleteAmbulance(ctx *gin.Context)

    // GetAllAmbulances - Retrieves all ambulances
   GetAllAmbulances(ctx *gin.Context)

 }

 // partial implementation of AmbulancesAPI - all functions must be implemented in add on files
type implAmbulancesAPI struct {

}

func newAmbulancesAPI() AmbulancesAPI {
  return &implAmbulancesAPI{}
}

func (this *implAmbulancesAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/ambulances", this.CreateAmbulance)
  routerGroup.Handle( http.MethodDelete, "/ambulances/:ambulanceId", this.DeleteAmbulance)
  routerGroup.Handle( http.MethodGet, "/ambulances", this.GetAllAmbulances)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateAmbulance - Creates a new ambulance
// func (this *implAmbulancesAPI) CreateAmbulance(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteAmbulance - Deletes a specific ambulance
// func (this *implAmbulancesAPI) DeleteAmbulance(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetAllAmbulances - Retrieves all ambulances
// func (this *implAmbulancesAPI) GetAllAmbulances(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

